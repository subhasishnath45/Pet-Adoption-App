{"mappings":"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","sources":["src/SearchParams.tsx","src/Results.tsx","src/Pet.tsx","src/useBreedList.tsx","src/actionCreators/changeLocation.js","src/actionCreators/changeAnimal.js","src/actionCreators/changeBreed.js","src/actionCreators/changeTheme.js"],"sourcesContent":["import React, { useState, useEffect, FunctionComponent } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Results from \"./Results\";\r\nimport useBreedList from \"./useBreedList\";\r\n\r\nimport changeLocation from './actionCreators/changeLocation';\r\nimport changeAnimal from './actionCreators/changeAnimal';\r\nimport changeBreed from './actionCreators/changeBreed';\r\nimport changeTheme from './actionCreators/changeTheme';\r\n\r\nimport { PetAPIResponse, Pet as IPet, Animal } from \"./APIResponseTypes\";\r\nimport store from \"./store\";\r\n\r\nconst ANIMALS: Animal[] = [\"bird\", \"cat\", \"dog\", \"rabbit\", \"reptile\"];\r\n\r\nconst SearchParams: FunctionComponent = () => {\r\n  // const [location, setLocation] = useState(\"\");\r\n  // const [animal, setAnimal] = useState(\"\" as Animal);\r\n  // const [breed, setBreed] = useState(\"\");\r\n\r\n  /*\r\n  useSelector()â€‹ allows you to extract data from the Redux store state, using a selector function. \r\n  */ \r\n  const animal = useSelector((state) => state.animal);\r\n  const location = useSelector((state) => state.location);\r\n  const theme = useSelector((state) => state.theme);\r\n  const breed = useSelector((state) => state.breed);\r\n\r\n  /**\r\nThis hook returns a reference to the dispatch function from the Redux store. You may use it to dispatch actions as needed.\r\n   */\r\n  const dispatch = useDispatch();\r\n\r\n  // pets will hold an array with all the pets comming from API.\r\n  const [pets, setPets] = useState([] as IPet[]);\r\n  // useBreedList is a custom hook.\r\n  const [breeds] = useBreedList(animal as Animal);\r\n\r\n  useEffect(() => {\r\n    void requestPets();\r\n  }, []);\r\n\r\n  // async function to get data from API endpoint\r\n  async function requestPets() {\r\n    // response of the fetch request\r\n    const response: Response = await fetch(\r\n      `http://pets-v2.dev-apis.com/pets?animal=${animal}&location=${location}&breed=${breed}`\r\n    );\r\n    // takes a response and parsing the body text as JSON\r\n    const json = (await response.json()) as PetAPIResponse;\r\n    // console.log(json.pets);\r\n    setPets(json.pets);\r\n  }\r\n\r\n  function handleAnimalChange(e){\r\n    dispatch(changeBreed(\"\"));\r\n    dispatch(changeAnimal(e.target.value));\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-params my-0 mx-auto px-0 w-11/12\">\r\n      <form\r\n        className=\"search-params p-10 mb-10 rounded-lg bg-gray-200 shadow-lg flex flex-col justify-center items-center divide-y divide-gray-900\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          void requestPets();\r\n        }}\r\n      >\r\n        <label htmlFor=\"location\" className=\"search-label\">\r\n          Location\r\n          <input\r\n            className=\"search-control block\"\r\n            id=\"location\"\r\n            onChange={(e) => dispatch(changeLocation(e.target.value))}\r\n            value={location}\r\n            placeholder=\"Location\"\r\n          />\r\n        </label>\r\n        <label htmlFor=\"animal\" className=\"search-label\">\r\n          Animal\r\n          <select\r\n            className=\"search-control block\"\r\n            id=\"animal\"\r\n            value={animal}\r\n            onChange={handleAnimalChange}\r\n            onBlur={handleAnimalChange}\r\n          >\r\n            <option />\r\n            {ANIMALS.map((animal) => (\r\n              <option key={animal} value={animal}>\r\n                {animal}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label htmlFor=\"breed\" className=\"search-label\">\r\n          breed\r\n          <select\r\n            className=\"search-control disabled:opacity-50 block\"\r\n            disabled={!breeds.length}\r\n            id=\"breed\"\r\n            value={breed}\r\n            onChange={(e) => dispatch(changeBreed(e.target.value))}\r\n            onBlur={(e) => dispatch(changeBreed(e.target.value))}\r\n          >\r\n            {breeds.map((breed) => (\r\n              <option key={breed} value={breed}>\r\n                {breed}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label htmlFor=\"theme\" className=\"search-label\">\r\n          Theme\r\n          <select\r\n            className=\"search-control block\"\r\n            value={theme}\r\n            onChange={(e) => dispatch(changeTheme(e.target.value))}\r\n            onBlur={(e) => dispatch(changeTheme(e.target.value))}\r\n          >\r\n            <option value=\"peru\">Peru</option>\r\n            <option value=\"darkblue\">Dark Blue</option>\r\n            <option value=\"chartreuse\">Chartreuse</option>\r\n            <option value=\"mediumorchid\">Medium orchid</option>\r\n          </select>\r\n        </label>\r\n        <button\r\n          style={{ backgroundColor: theme }}\r\n          className=\"search-control rounded px-6 py-2 text-white hover:opacity-50 border-none\"\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n      <Results pets={pets} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchParams;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport Pet from \"./Pet\";\r\nimport {Pet as IPet} from './APIResponseTypes';\r\n\r\nconst Results: FunctionComponent<{pets: IPet[]}> = ({pets})=>{\r\n  // destructuring props to extract a key\r\n  //   console.log(pets);\r\n  return (\r\n    <div className=\"search grid gap-4 grid-cols-1 lg:grid-cols-3 sm:grid-cols-2\">\r\n      {!pets.length ? (\r\n        <h2>No pets found</h2>\r\n      ) : (\r\n        pets.map((pet) => (\r\n          <Pet\r\n            name={pet.name}\r\n            animal={pet.animal}\r\n            breed={pet.breed}\r\n            key={pet.id}\r\n            images={pet.images}\r\n            location={`${pet.city}, ${pet.state}`}\r\n            description={pet.description}\r\n            id={pet.id}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface IProps {\r\n\tid: number;\r\n\tname: string;\r\n\tanimal: \"dog\" | \"cat\" | \"bird\" | \"reptile\" | \"rabbit\";\r\n\tdescription: string;\r\n\tbreed: string;\r\n\timages: string[];\r\n  location: string;\r\n}\r\n// passing props for this component.\r\nconst Pet: FunctionComponent<IProps> = (props: IProps) => {\r\n  const { name, animal, breed, images, location, id } = props;\r\n  let hero = \"http://pets-images.dev-apis.com/pets/none.jpg\";\r\n  if (images && images.length) {\r\n    hero = images[0];\r\n  }\r\n  return (\r\n    <Link to={`/details/${id}`} className=\"pet relative block\">\r\n      <div className=\"image-container\">\r\n        <img data-testid=\"thumbnail\" src={hero} alt={name} />\r\n      </div>\r\n      <div className=\"info absolute w-full bottom-0 left-0 bg-gradient-to-tr from-white to-transparent px-2 py-2\">\r\n        <h1>{name}</h1>\r\n        <h2>{`${animal} - ${breed} - ${location}`}</h2>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Pet;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Animal, BreedListAPIResponse } from \"./APIResponseTypes\";\r\n// to store breed locally.\r\nconst localCache:{\r\n  [index: string]: string[];\r\n} = {};\r\n\r\ntype Status = \"unloaded\" | \"loading\" | \"loaded\";\r\n\r\n// passing down animal props to our custom hook\r\n// our custom hook will use other built-in hooks\r\nfunction useBreedList(animal: Animal): [string[], Status] {\r\n  const [breedList, setBreedList] = useState([] as string[]);\r\n  const [status, setStatus] = useState(\"unloaded\" as Status);\r\n  useEffect(() => {\r\n    if (!animal) {\r\n      // when there is no animal\r\n      setBreedList([]); // empty breedlist\r\n    } else if (localCache[animal]) {\r\n      // if animal is in cache\r\n      // load from there.\r\n      setBreedList(localCache[animal]);\r\n    } else {\r\n      // making a quest to an API to fetch fresh breedlist.\r\n      void requestBreedList();\r\n    }\r\n    // async function to fetch data from API\r\n    async function requestBreedList() {\r\n      setBreedList([]); // emptying breedList\r\n      setStatus(\"loading\" as Status); // status is loading.\r\n      const res: Response = await fetch(\r\n        `http://pets-v2.dev-apis.com/breeds?animal=${animal}`\r\n      );\r\n      const json = await res.json() as BreedListAPIResponse;\r\n      localCache[animal] = json.breeds || [];\r\n      setBreedList(localCache[animal]);\r\n      setStatus(\"loaded\" as Status);\r\n    }\r\n  }, [animal]); // animal is a prop, based on which the effect will run.\r\n  // custom hook will return the following array\r\n  return [breedList, status];\r\n}\r\n\r\nexport default useBreedList;\r\n","/**\r\n action creators are functions, that take a parameter and returns correct shape of action object with proper data.\r\n */\r\nexport default function changeLocation(location) {\r\n  return { type: \"CHANGE_LOCATION\", payload: location };\r\n}\r\n","/**\r\n action creators are functions, that take a parameter and returns correct shape of action object with proper data.\r\n*/\r\nexport default function changeAnimal(animal) {\r\n  return { type: \"CHANGE_ANIMAL\", payload: animal };\r\n}\r\n","/**\r\n action creators are functions, that take a parameter and returns correct shape of action object with proper data.\r\n */\r\nexport default function changeBreed(breed) {\r\n  return { type: \"CHANGE_BREED\", payload: breed };\r\n}\r\n","/**\r\n action creators are functions, that take a parameter and returns correct shape of action object with proper data.\r\n */\r\nexport default function changeTheme(theme) {\r\n  return { type: \"CHANGE_THEME\", payload: theme };\r\n}\r\n"],"names":["$3Zbho","parcelRequire","ANIMALS","theme","useSelector","state","breed","$1aLZd","breed1","setPets","useState","requestPets","useDispatch","pets","$9L5Vs","breeds","default","animal1","json","handleAnimalChange","fetch","location","dispatch","changeBreed","changeAnimal","e","$1wGqY","useEffect","jsxs","jsx","className","id","value","animal","disabled","target","children","map","changeTheme","$eD2B9","backgroundColor","$abuzn","$d192119b281f5d17$export$2e2bcd8739ae039","length","pet","$g1dBD","name","images","city","description","$a73a4cdb6ace6aa2$export$2e2bcd8739ae039","props","hero","$brOwx","Link","to","src","alt","localCache","$916f44d47e200ba1$export$2e2bcd8739ae039","breedList","setBreedList","status","setStatus","async","res","requestBreedList","$194b3c24730ac09a$export$2e2bcd8739ae039","type","payload","$3fbd1512565bb9f5$export$2e2bcd8739ae039","$11c9b21a71c3e970$export$2e2bcd8739ae039","$aa66b9295b2d6f1b$export$2e2bcd8739ae039"],"version":3,"file":"SearchParams.ba105a6c.js.map"}