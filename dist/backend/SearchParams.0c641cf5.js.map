{"mappings":"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","sources":["src/SearchParams.js","src/Results.js","src/Pet.js","src/useBreedList.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport ThemeContext from \"./ThemeContext\";\r\nimport Results from \"./Results\";\r\nimport useBreedList from \"./useBreedList\";\r\nconst ANIMALS = [\"bird\", \"cat\", \"dog\", \"rabbit\", \"reptile\"];\r\n\r\nfunction SearchParams() {\r\n  const [location, setLocation] = useState(\"\");\r\n  const [animal, setAnimal] = useState(\"\");\r\n  const [breed, setBreed] = useState(\"\");\r\n  // pets will hold an array with all the pets comming from API.\r\n  const [pets, setPets] = useState([]);\r\n  // useBreedList is a custom hook.\r\n  const [breeds] = useBreedList(animal);\r\n  // In order to use the Context in a child component, we need to access it using the useContext Hook.\r\n  // as we sent an array, therefore destructuring the array.\r\n  const [theme, setTheme] = useContext(ThemeContext);\r\n\r\n  useEffect(() => {\r\n    requestPets();\r\n  }, []);\r\n\r\n  // async function to get data from API endpoint\r\n  async function requestPets() {\r\n    // response of the fetch request\r\n    const response = await fetch(\r\n      `http://pets-v2.dev-apis.com/pets?animal=${animal}&location=${location}&breed=${breed}`\r\n    );\r\n    // takes a response and parsing the body text as JSON\r\n    const json = await response.json();\r\n    // console.log(json.pets);\r\n    setPets(json.pets);\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-params my-0 mx-auto px-0 w-11/12\">\r\n      <form\r\n        className=\"search-params p-10 mb-10 rounded-lg bg-gray-200 shadow-lg flex flex-col justify-center items-center divide-y divide-gray-900\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          requestPets();\r\n        }}\r\n      >\r\n        <label htmlFor=\"location\" className=\"search-label\">\r\n          Location\r\n          <input\r\n            className=\"search-control block\"\r\n            id=\"location\"\r\n            onChange={(e) => setLocation(e.target.value)}\r\n            value={location}\r\n            placeholder=\"Location\"\r\n          />\r\n        </label>\r\n        <label htmlFor=\"animal\" className=\"search-label\">\r\n          Animal\r\n          <select\r\n            className=\"search-control block\"\r\n            id=\"animal\"\r\n            value={animal}\r\n            onChange={(e) => setAnimal(e.target.value)}\r\n            onBlur={(e) => setAnimal(e.target.value)}\r\n          >\r\n            <option />\r\n            {ANIMALS.map((animal) => (\r\n              <option key={animal} value={animal}>\r\n                {animal}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label htmlFor=\"breed\" className=\"search-label\">\r\n          breed\r\n          <select\r\n            className=\"search-control disabled:opacity-50 block\"\r\n            disabled={!breeds.length}\r\n            id=\"breed\"\r\n            value={breed}\r\n            onChange={(e) => setBreed(e.target.value)}\r\n            onBlur={(e) => setBreed(e.target.value)}\r\n          >\r\n            {breeds.map((breed) => (\r\n              <option key={breed} value={breed}>\r\n                {breed}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label htmlFor=\"theme\" className=\"search-label\">\r\n          Theme\r\n          <select\r\n            className=\"search-control block\"\r\n            value={theme}\r\n            onChange={(e) => setTheme(e.target.value)}\r\n            onBlur={(e) => setTheme(e.target.value)}\r\n          >\r\n            <option value=\"peru\">Peru</option>\r\n            <option value=\"darkblue\">Dark Blue</option>\r\n            <option value=\"chartreuse\">Chartreuse</option>\r\n            <option value=\"mediumorchid\">Medium orchid</option>\r\n          </select>\r\n        </label>\r\n        <button\r\n          style={{ backgroundColor: theme }}\r\n          className=\"search-control rounded px-6 py-2 text-white hover:opacity-50 border-none\"\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n      <Results pets={pets} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchParams;\r\n","import React from \"react\";\r\nimport Pet from \"./Pet\";\r\nfunction Results(props) {\r\n  // destructuring props to extract a key\r\n  const { pets } = props;\r\n  //   console.log(pets);\r\n  return (\r\n    <div className=\"search grid gap-4 grid-cols-1 lg:grid-cols-3 sm:grid-cols-2\">\r\n      {!pets.length ? (\r\n        <h2>No pets found</h2>\r\n      ) : (\r\n        pets.map((pet) => (\r\n          <Pet\r\n            name={pet.name}\r\n            animal={pet.animal}\r\n            breed={pet.breed}\r\n            key={pet.id}\r\n            images={pet.images}\r\n            location={`${pet.city}, ${pet.state}`}\r\n            id={pet.id}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// passing props for this component.\r\nconst Pet = (props) => {\r\n  const { name, animal, breed, images, location, id } = props;\r\n  let hero = images.length\r\n    ? `${images[0]}`\r\n    : `http://pets-images.dev-apis.com/pets/none.jpg`;\r\n  return (\r\n    <Link to={`/details/${id}`} className=\"pet relative block\">\r\n      <div className=\"image-container\">\r\n        <img src={hero} alt={name} />\r\n      </div>\r\n      <div className=\"info absolute w-full bottom-0 left-0 bg-gradient-to-tr from-white to-transparent px-2 py-2\">\r\n        <h1>{name}</h1>\r\n        <h2>{`${animal} - ${breed} - ${location}`}</h2>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Pet;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// to store breed locally.\r\nconst localCache = {};\r\n\r\n// passing down animal props to our custom hook\r\n// our custom hook will use other built-in hooks\r\nfunction useBreedList(animal) {\r\n  const [breedList, setBreedList] = useState([]);\r\n  const [status, setStatus] = useState(\"unloaded\");\r\n  useEffect(() => {\r\n    if (!animal) {\r\n      // when there is no animal\r\n      setBreedList([]); // empty breedlist\r\n    } else if (localCache[animal]) {\r\n      // if animal is in cache\r\n      // load from there.\r\n      setBreedList(localCache[animal]);\r\n    } else {\r\n      // making a quest to an API to fetch fresh breedlist.\r\n      requestBreedList();\r\n    }\r\n    // async function to fetch data from API\r\n    async function requestBreedList() {\r\n      setBreedList([]); // emptying breedList\r\n      setStatus(\"loading\"); // status is loading.\r\n      const res = await fetch(\r\n        `http://pets-v2.dev-apis.com/breeds?animal=${animal}`\r\n      );\r\n      const json = await res.json();\r\n      localCache[animal] = json.breeds || [];\r\n      setBreedList(localCache[animal]);\r\n      setStatus(\"loaded\");\r\n    }\r\n  }, [animal]); // animal is a prop, based on which the effect will run.\r\n  // custom hook will return the following array\r\n  return [breedList, status];\r\n}\r\n\r\nexport default useBreedList;\r\n"],"names":["React","useState","useEffect","useContext","ThemeContext","Results","useBreedList","ANIMALS","SearchParams","location","setLocation","animal","setAnimal","breed","setBreed","pets","setPets","breeds","theme","setTheme","requestPets","response","fetch","json","e","preventDefault","target","value","map","length","backgroundColor","Pet","props","pet","name","images","city","state","id","Link","hero","localCache","breedList","setBreedList","status","setStatus","requestBreedList","res"],"version":3,"file":"SearchParams.0c641cf5.js.map","sourceRoot":"../../"}