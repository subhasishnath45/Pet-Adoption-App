{"mappings":"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","sources":["src/SearchParams.js","src/Results.js","src/Pet.js","src/useBreedList.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport ThemeContext from \"./ThemeContext\";\r\nimport Results from \"./Results\";\r\nimport useBreedList from \"./useBreedList\";\r\nconst ANIMALS = [\"bird\", \"cat\", \"dog\", \"rabbit\", \"reptile\"];\r\n\r\nfunction SearchParams() {\r\n  const [location, setLocation] = useState(\"\");\r\n  const [animal, setAnimal] = useState(\"\");\r\n  const [breed, setBreed] = useState(\"\");\r\n  // pets will hold an array with all the pets comming from API.\r\n  const [pets, setPets] = useState([]);\r\n  // useBreedList is a custom hook.\r\n  const [breeds] = useBreedList(animal);\r\n  // In order to use the Context in a child component, we need to access it using the useContext Hook.\r\n  // as we sent an array, therefore destructuring the array.\r\n  const [theme, setTheme] = useContext(ThemeContext);\r\n\r\n  useEffect(() => {\r\n    requestPets();\r\n  }, []);\r\n\r\n  // async function to get data from API endpoint\r\n  async function requestPets() {\r\n    // response of the fetch request\r\n    const response = await fetch(\r\n      `http://pets-v2.dev-apis.com/pets?animal=${animal}&location=${location}&breed=${breed}`\r\n    );\r\n    // takes a response and parsing the body text as JSON\r\n    const json = await response.json();\r\n    // console.log(json.pets);\r\n    setPets(json.pets);\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-params my-0 mx-auto px-0 w-11/12\">\r\n      <form\r\n        className=\"search-params p-10 mb-10 rounded-lg bg-gray-200 shadow-lg flex flex-col justify-center items-center divide-y divide-gray-900\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          requestPets();\r\n        }}\r\n      >\r\n        <label htmlFor=\"location\" className=\"search-label\">\r\n          Location\r\n          <input\r\n            className=\"search-control block\"\r\n            id=\"location\"\r\n            onChange={(e) => setLocation(e.target.value)}\r\n            value={location}\r\n            placeholder=\"Location\"\r\n          />\r\n        </label>\r\n        <label htmlFor=\"animal\" className=\"search-label\">\r\n          Animal\r\n          <select\r\n            className=\"search-control block\"\r\n            id=\"animal\"\r\n            value={animal}\r\n            onChange={(e) => setAnimal(e.target.value)}\r\n            onBlur={(e) => setAnimal(e.target.value)}\r\n          >\r\n            <option />\r\n            {ANIMALS.map((animal) => (\r\n              <option key={animal} value={animal}>\r\n                {animal}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label htmlFor=\"breed\" className=\"search-label\">\r\n          breed\r\n          <select\r\n            className=\"search-control disabled:opacity-50 block\"\r\n            disabled={!breeds.length}\r\n            id=\"breed\"\r\n            value={breed}\r\n            onChange={(e) => setBreed(e.target.value)}\r\n            onBlur={(e) => setBreed(e.target.value)}\r\n          >\r\n            {breeds.map((breed) => (\r\n              <option key={breed} value={breed}>\r\n                {breed}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label htmlFor=\"theme\" className=\"search-label\">\r\n          Theme\r\n          <select\r\n            className=\"search-control block\"\r\n            value={theme}\r\n            onChange={(e) => setTheme(e.target.value)}\r\n            onBlur={(e) => setTheme(e.target.value)}\r\n          >\r\n            <option value=\"peru\">Peru</option>\r\n            <option value=\"darkblue\">Dark Blue</option>\r\n            <option value=\"chartreuse\">Chartreuse</option>\r\n            <option value=\"mediumorchid\">Medium orchid</option>\r\n          </select>\r\n        </label>\r\n        <button\r\n          style={{ backgroundColor: theme }}\r\n          className=\"search-control rounded px-6 py-2 text-white hover:opacity-50 border-none\"\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n      <Results pets={pets} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchParams;\r\n","import React from \"react\";\r\nimport Pet from \"./Pet\";\r\nfunction Results(props) {\r\n  // destructuring props to extract a key\r\n  const { pets } = props;\r\n  //   console.log(pets);\r\n  return (\r\n    <div className=\"search grid gap-4 grid-cols-1 lg:grid-cols-3 sm:grid-cols-2\">\r\n      {!pets.length ? (\r\n        <h2>No pets found</h2>\r\n      ) : (\r\n        pets.map((pet) => (\r\n          <Pet\r\n            name={pet.name}\r\n            animal={pet.animal}\r\n            breed={pet.breed}\r\n            key={pet.id}\r\n            images={pet.images}\r\n            location={`${pet.city}, ${pet.state}`}\r\n            id={pet.id}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// passing props for this component.\r\nconst Pet = (props) => {\r\n  const { name, animal, breed, images, location, id } = props;\r\n  let hero = images.length\r\n    ? `${images[0]}`\r\n    : `http://pets-images.dev-apis.com/pets/none.jpg`;\r\n  return (\r\n    <Link to={`/details/${id}`} className=\"pet relative block\">\r\n      <div className=\"image-container\">\r\n        <img src={hero} alt={name} />\r\n      </div>\r\n      <div className=\"info absolute w-full bottom-0 left-0 bg-gradient-to-tr from-white to-transparent px-2 py-2\">\r\n        <h1>{name}</h1>\r\n        <h2>{`${animal} - ${breed} - ${location}`}</h2>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Pet;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// to store breed locally.\r\nconst localCache = {};\r\n\r\n// passing down animal props to our custom hook\r\n// our custom hook will use other built-in hooks\r\nfunction useBreedList(animal) {\r\n  const [breedList, setBreedList] = useState([]);\r\n  const [status, setStatus] = useState(\"unloaded\");\r\n  useEffect(() => {\r\n    if (!animal) {\r\n      // when there is no animal\r\n      setBreedList([]); // empty breedlist\r\n    } else if (localCache[animal]) {\r\n      // if animal is in cache\r\n      // load from there.\r\n      setBreedList(localCache[animal]);\r\n    } else {\r\n      // making a quest to an API to fetch fresh breedlist.\r\n      requestBreedList();\r\n    }\r\n    // async function to fetch data from API\r\n    async function requestBreedList() {\r\n      setBreedList([]); // emptying breedList\r\n      setStatus(\"loading\"); // status is loading.\r\n      const res = await fetch(\r\n        `http://pets-v2.dev-apis.com/breeds?animal=${animal}`\r\n      );\r\n      const json = await res.json();\r\n      localCache[animal] = json.breeds || [];\r\n      setBreedList(localCache[animal]);\r\n      setStatus(\"loaded\");\r\n    }\r\n  }, [animal]); // animal is a prop, based on which the effect will run.\r\n  // custom hook will return the following array\r\n  return [breedList, status];\r\n}\r\n\r\nexport default useBreedList;\r\n"],"names":["$fCCkY","parcelRequire","ANIMALS","$303d776af9775da6$export$2e2bcd8739ae039","useState","$bdruz","default","location","setLocation","animal","setAnimal","breed","setBreed","pets","setPets","breeds","useBreedList","useContext","ThemeContext","theme","setTheme","requestPets","apply","this","arguments","$parcel$interopDefault","$eEkU8","mark","_callee","response","json","fetch","concat","_ctx","sent","useEffect","$9m374","jsxs","className","children","onSubmit","e","preventDefault","htmlFor","jsx","id","onChange","target","value","placeholder","onBlur","map","disabled","length","style","backgroundColor","$8IReq","$659bb978a9e71184$export$2e2bcd8739ae039","props","pet","$02pfq","name","images","city","state","$0073c5b3b4da243c$export$2e2bcd8739ae039","hero","$9MP5L","Link","to","src","alt","localCache","$c17eb48d126c55ba$export$2e2bcd8739ae039","breedList","setBreedList","status","setStatus","requestBreedList","res"],"version":3,"file":"SearchParams.98f58f03.js.map"}