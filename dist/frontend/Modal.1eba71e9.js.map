{"mappings":"4ZAAA,IAAAA,EAAAC,EAAA,S,0BAGA,IAAIC,E,MAEU,EAACC,SAAEA,MAGfD,EAAYA,GAAwBE,SAASC,eAAe,SAG5D,MAAMC,GAAQC,YAAO,MAwBtB,OAtBMD,EAAME,UAGTF,EAAME,QAAUJ,SAASK,cAAc,SAEzCC,gBAAU,KAERR,EAAUS,YAAYL,EAAME,SAErB,IAAMN,EAAUU,YAAYN,EAAME,WACxC,KAYJ,EAAAK,EAAAC,eAAA,EAAAC,EAAAC,KAAA,OAEDC,UAAA,uI","sources":["src/Modal.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n// the div with modal id in index.html file.\r\nlet modalRoot;\r\n\r\nconst Modal = ({ children }) => {\r\n  // if modalroot exists, then keep it same\r\n  // otherwise, fetch it from the DOM.\r\n  modalRoot = modalRoot ? modalRoot : document.getElementById(\"modal\");\r\n\r\n  // The useRef Hook allows you to persist values between renders.\r\n  const elRef = useRef(null);\r\n  // if current doesn't have a value\r\n  if (!elRef.current) {\r\n    // storing a newly created div to current property.\r\n    // the div will persist after re-render\r\n    elRef.current = document.createElement(\"div\");\r\n  }\r\n  useEffect(() => {\r\n    // Appending the modal element inside modalRoot.\r\n    modalRoot.appendChild(elRef.current);\r\n    // clearning up the modal element from modalRoot after modal is displayed and unrendering the modal.\r\n    return () => modalRoot.removeChild(elRef.current);\r\n  }, []);\r\n  /**\r\n   * The first argument of createPortal is any renderable React child, such as an element, string, or fragment. The second argument (container) is a DOM element.\r\n   *\r\n   * Down at the bottom we use React's createPortal to pass the children (whatever you put inside <Modal></Modal>) to the portal div\r\n   */\r\n  return createPortal(\r\n    <div className=\"modal-wrapper fixed h-screen w-screen flex justify-center items-center bg-gradient-to-tr from-purple-500 to-pink-500 overflow-hidden\">\r\n      {children}\r\n    </div>,\r\n    elRef.current\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n"],"names":["$9L5Vs","parcelRequire","modalRoot","children","document","getElementById","elRef","useRef","current","createElement","useEffect","appendChild","removeChild","$fT1cK","createPortal","$3Zbho","jsx","className"],"version":3,"file":"Modal.1eba71e9.js.map"}