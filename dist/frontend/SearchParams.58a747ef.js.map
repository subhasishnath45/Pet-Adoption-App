{"mappings":"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","sources":["src/SearchParams.js","src/Results.js","src/Pet.js","src/useBreedList.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport ThemeContext from \"./ThemeContext\";\r\nimport Results from \"./Results\";\r\nimport useBreedList from \"./useBreedList\";\r\nconst ANIMALS = [\"bird\", \"cat\", \"dog\", \"rabbit\", \"reptile\"];\r\n\r\nfunction SearchParams() {\r\n  const [location, setLocation] = useState(\"\");\r\n  const [animal, setAnimal] = useState(\"\");\r\n  const [breed, setBreed] = useState(\"\");\r\n  // pets will hold an array with all the pets comming from API.\r\n  const [pets, setPets] = useState([]);\r\n  // useBreedList is a custom hook.\r\n  const [breeds] = useBreedList(animal);\r\n  // In order to use the Context in a child component, we need to access it using the useContext Hook.\r\n  // as we sent an array, therefore destructuring the array.\r\n  const [theme, setTheme] = useContext(ThemeContext);\r\n\r\n  useEffect(() => {\r\n    requestPets();\r\n  }, []);\r\n\r\n  // async function to get data from API endpoint\r\n  async function requestPets() {\r\n    // response of the fetch request\r\n    const response = await fetch(\r\n      `http://pets-v2.dev-apis.com/pets?animal=${animal}&location=${location}&breed=${breed}`\r\n    );\r\n    // takes a response and parsing the body text as JSON\r\n    const json = await response.json();\r\n    // console.log(json.pets);\r\n    setPets(json.pets);\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-params my-0 mx-auto px-0 w-11/12\">\r\n      <form\r\n        className=\"search-params p-10 mb-10 rounded-lg bg-gray-200 shadow-lg flex flex-col justify-center items-center divide-y divide-gray-900\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          requestPets();\r\n        }}\r\n      >\r\n        <label htmlFor=\"location\" className=\"search-label\">\r\n          Location\r\n          <input\r\n            className=\"search-control block\"\r\n            id=\"location\"\r\n            onChange={(e) => setLocation(e.target.value)}\r\n            value={location}\r\n            placeholder=\"Location\"\r\n          />\r\n        </label>\r\n        <label htmlFor=\"animal\" className=\"search-label\">\r\n          Animal\r\n          <select\r\n            className=\"search-control block\"\r\n            id=\"animal\"\r\n            value={animal}\r\n            onChange={(e) => setAnimal(e.target.value)}\r\n            onBlur={(e) => setAnimal(e.target.value)}\r\n          >\r\n            <option />\r\n            {ANIMALS.map((animal) => (\r\n              <option key={animal} value={animal}>\r\n                {animal}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label htmlFor=\"breed\" className=\"search-label\">\r\n          breed\r\n          <select\r\n            className=\"search-control disabled:opacity-50 block\"\r\n            disabled={!breeds.length}\r\n            id=\"breed\"\r\n            value={breed}\r\n            onChange={(e) => setBreed(e.target.value)}\r\n            onBlur={(e) => setBreed(e.target.value)}\r\n          >\r\n            {breeds.map((breed) => (\r\n              <option key={breed} value={breed}>\r\n                {breed}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label htmlFor=\"theme\" className=\"search-label\">\r\n          Theme\r\n          <select\r\n            className=\"search-control block\"\r\n            value={theme}\r\n            onChange={(e) => setTheme(e.target.value)}\r\n            onBlur={(e) => setTheme(e.target.value)}\r\n          >\r\n            <option value=\"peru\">Peru</option>\r\n            <option value=\"darkblue\">Dark Blue</option>\r\n            <option value=\"chartreuse\">Chartreuse</option>\r\n            <option value=\"mediumorchid\">Medium orchid</option>\r\n          </select>\r\n        </label>\r\n        <button\r\n          style={{ backgroundColor: theme }}\r\n          className=\"search-control rounded px-6 py-2 text-white hover:opacity-50 border-none\"\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n      <Results pets={pets} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchParams;\r\n","import React from \"react\";\r\nimport Pet from \"./Pet\";\r\nfunction Results(props) {\r\n  // destructuring props to extract a key\r\n  const { pets } = props;\r\n  //   console.log(pets);\r\n  return (\r\n    <div className=\"search grid gap-4 grid-cols-1 lg:grid-cols-3 sm:grid-cols-2\">\r\n      {!pets.length ? (\r\n        <h2>No pets found</h2>\r\n      ) : (\r\n        pets.map((pet) => (\r\n          <Pet\r\n            name={pet.name}\r\n            animal={pet.animal}\r\n            breed={pet.breed}\r\n            key={pet.id}\r\n            images={pet.images}\r\n            location={`${pet.city}, ${pet.state}`}\r\n            id={pet.id}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// passing props for this component.\r\nconst Pet = (props) => {\r\n  const { name, animal, breed, images, location, id } = props;\r\n  let hero = images.length\r\n    ? `${images[0]}`\r\n    : `http://pets-images.dev-apis.com/pets/none.jpg`;\r\n  return (\r\n    <Link to={`/details/${id}`} className=\"pet relative block\">\r\n      <div className=\"image-container\">\r\n        <img src={hero} alt={name} />\r\n      </div>\r\n      <div className=\"info absolute w-full bottom-0 left-0 bg-gradient-to-tr from-white to-transparent px-2 py-2\">\r\n        <h1>{name}</h1>\r\n        <h2>{`${animal} - ${breed} - ${location}`}</h2>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Pet;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// to store breed locally.\r\nconst localCache = {};\r\n\r\n// passing down animal props to our custom hook\r\n// our custom hook will use other built-in hooks\r\nfunction useBreedList(animal) {\r\n  const [breedList, setBreedList] = useState([]);\r\n  const [status, setStatus] = useState(\"unloaded\");\r\n  useEffect(() => {\r\n    if (!animal) {\r\n      // when there is no animal\r\n      setBreedList([]); // empty breedlist\r\n    } else if (localCache[animal]) {\r\n      // if animal is in cache\r\n      // load from there.\r\n      setBreedList(localCache[animal]);\r\n    } else {\r\n      // making a quest to an API to fetch fresh breedlist.\r\n      requestBreedList();\r\n    }\r\n    // async function to fetch data from API\r\n    async function requestBreedList() {\r\n      setBreedList([]); // emptying breedList\r\n      setStatus(\"loading\"); // status is loading.\r\n      const res = await fetch(\r\n        `http://pets-v2.dev-apis.com/breeds?animal=${animal}`\r\n      );\r\n      const json = await res.json();\r\n      localCache[animal] = json.breeds || [];\r\n      setBreedList(localCache[animal]);\r\n      setStatus(\"loaded\");\r\n    }\r\n  }, [animal]); // animal is a prop, based on which the effect will run.\r\n  // custom hook will return the following array\r\n  return [breedList, status];\r\n}\r\n\r\nexport default useBreedList;\r\n"],"names":["$9L5Vs","parcelRequire","ANIMALS","$bf4ad3a7b287c378$export$2e2bcd8739ae039","location","setLocation","useState","animal","setAnimal","breed","setBreed","pets","setPets","breeds","useBreedList","theme","setTheme","useContext","ThemeContext","async","requestPets","response","fetch","json","useEffect","$3Zbho","jsxs","className","children","onSubmit","e","preventDefault","htmlFor","jsx","id","onChange","target","value","placeholder","onBlur","map","disabled","length","style","backgroundColor","$ay5NA","default","$7ae193db6a87c7b2$export$2e2bcd8739ae039","props","pet","$dxWX6","name","images","city","state","$9dcc1618b62e1cc0$export$2e2bcd8739ae039","hero","$brOwx","Link","to","src","alt","localCache","$29cb78d5d0fae820$export$2e2bcd8739ae039","breedList","setBreedList","status","setStatus","res","requestBreedList"],"version":3,"file":"SearchParams.58a747ef.js.map"}